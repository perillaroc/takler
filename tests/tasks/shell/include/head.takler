#!/bin/bash

set -e          # stop the shell on first error
set -u          # fail when using an undefined variable
set -x          # echo script lines as they are executed
# set -o pipefail # fail if last(rightmost) command exits with a non-zero status

date

# Defines the three variables that are needed for any
# communication with SMS

export TAKLER_HOST={{ TAKLER_HOST }}
export TAKLER_PORT={{ TAKLER_PORT }}
export TAKLER_NAME={{ TAKLER_NAME }}

RID=$( echo ${SLURM_JOB_ID:-0} )
if [ $RID -eq 0 ] ; then
  RID=$$
fi
export TAKLER_RID=$RID

. /g1/u/wangdp/start_anaconda3.sh
conda activate takler
python -m takler.client init --host ${TAKLER_HOST} --port ${TAKLER_PORT} \
  --task-id ${TAKLER_RID} --node-path ${TAKLER_NAME}


# Define a error handler
ERROR() {
   set +e                      # Clear -e flag, so we don't fail
   wait                        # wait for background process to stop
   python -m takler.client abort --host ${TAKLER_HOST} --port ${TAKLER_PORT} \
      --node-path ${TAKLER_NAME}
   trap 0                      # Remove the trap
   exit 0                      # End the script
}
# Trap any calls to exit and errors caught by the -e flag

trap ERROR 0

# Trap any signal that may cause the script to fail

#trap ' echo "Killed by a signal"; ERROR ; ' 1 2 3 4 5 6 7 8 10 12 13 15
#trap '{ echo "Killed by a signal"; ERROR ; }' 1 2 3 4 5 6 7 8 10 12 13 15
trap '{ echo "Killed by a signal";trap 0;ERROR; }' 1 2 3 4 5 6 7 8 10 12 13 15
echo "exec on hostname:" "$(hostname)"
