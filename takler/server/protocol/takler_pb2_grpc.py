# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from takler.server.protocol import takler_pb2 as takler_dot_server_dot_protocol_dot_takler__pb2


class TaklerServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RunInitCommand = channel.unary_unary(
        '/takler_protocol.TaklerServer/RunInitCommand',
        request_serializer=takler_dot_server_dot_protocol_dot_takler__pb2.InitCommand.SerializeToString,
        response_deserializer=takler_dot_server_dot_protocol_dot_takler__pb2.ServiceResponse.FromString,
        )
    self.RunCompleteCommand = channel.unary_unary(
        '/takler_protocol.TaklerServer/RunCompleteCommand',
        request_serializer=takler_dot_server_dot_protocol_dot_takler__pb2.CompleteCommand.SerializeToString,
        response_deserializer=takler_dot_server_dot_protocol_dot_takler__pb2.ServiceResponse.FromString,
        )
    self.RunAbortCommand = channel.unary_unary(
        '/takler_protocol.TaklerServer/RunAbortCommand',
        request_serializer=takler_dot_server_dot_protocol_dot_takler__pb2.AbortCommand.SerializeToString,
        response_deserializer=takler_dot_server_dot_protocol_dot_takler__pb2.ServiceResponse.FromString,
        )


class TaklerServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RunInitCommand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunCompleteCommand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunAbortCommand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TaklerServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RunInitCommand': grpc.unary_unary_rpc_method_handler(
          servicer.RunInitCommand,
          request_deserializer=takler_dot_server_dot_protocol_dot_takler__pb2.InitCommand.FromString,
          response_serializer=takler_dot_server_dot_protocol_dot_takler__pb2.ServiceResponse.SerializeToString,
      ),
      'RunCompleteCommand': grpc.unary_unary_rpc_method_handler(
          servicer.RunCompleteCommand,
          request_deserializer=takler_dot_server_dot_protocol_dot_takler__pb2.CompleteCommand.FromString,
          response_serializer=takler_dot_server_dot_protocol_dot_takler__pb2.ServiceResponse.SerializeToString,
      ),
      'RunAbortCommand': grpc.unary_unary_rpc_method_handler(
          servicer.RunAbortCommand,
          request_deserializer=takler_dot_server_dot_protocol_dot_takler__pb2.AbortCommand.FromString,
          response_serializer=takler_dot_server_dot_protocol_dot_takler__pb2.ServiceResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'takler_protocol.TaklerServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
